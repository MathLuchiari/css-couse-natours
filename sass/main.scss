/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

$color-primary-light: #7ed56f;
$color-primary: #55c57a;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #FFF;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
    /* box-sizing: border-box; */
    /*
    content-box
        Essa é o estilo padrão, conforme especificado pela norma CSS. As propriedades width (largura) 
        e height (altura) são medidas incluindo só o conteúdo, mas não o padding, border ou margin. 
        Nota: Padding, border e margin serão fora da box. Exemplo.: Se .box {width: 350px} então se você 
        aplicar uma propriedade {border: 10px solid black;} o resultado renderizado no navegador (browser) 
        será .box {width: 370px;}
    padding-box 
        As propriedades de largura (width) e de altura (height) incluem o tamanho padding size, mas não incluem 
        a propriedade border ou margem.
    border-box
        As propriedades de largura (width) e de altura (height) incluem o tamanho padding size e a propriedade 
        border, mas não incluem a propriedade margin.
    */
}

html {
    /* font-size: 10px; */
    font-size: 62.5%;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    /* font-size: 1.6rem; */
    line-height: 1.7;
    /* 
        The line-height CSS property sets the height of a line box. It's commonly used to set the distance 
        between lines of text
    */
    color: $color-grey-dark;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(  to right bottom, 
                                        rgba($color-primary-light, 0.8),
                                        rgba($color-primary-dark, 0.8)
                                    )
                    , url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    
    clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%,-50%);
    text-align: center;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;

    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;

    /*
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    */
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/*
    link: Pseudo-class applied to an element which is a link
    visited: Pseudo-class applied to a link element which has been visited
*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

/*
    Pseudo-class applied to an element when the mouse passes over it
*/
.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

/*
    Pseudo-class applied to an element while it's being clicked
*/
.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}


.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: $color-white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    /* 80% {
        transform: translateX(-10px);
    } */

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}